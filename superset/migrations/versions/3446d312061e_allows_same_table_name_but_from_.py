# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""allows same table_name but from different schema to be added to dataset

Revision ID: 3446d312061e
Revises: 070c043f2fdb
Create Date: 2021-02-22 16:31:35.858483

"""

# revision identifiers, used by Alembic.
revision = '3446d312061e'
down_revision = '070c043f2fdb'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sqlite_sequence')
    op.alter_column('alerts', 'grace_period',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('alerts', 'log_retention',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'alerts', 'dbs', ['database_id'], ['id'])
    op.alter_column('annotation', 'layer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clusters', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('clusters', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'clusters', ['verbose_name'])
    op.alter_column('columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('css_templates', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('css_templates', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dashboard_roles', 'dashboard_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('dashboards', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dashboards', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'dashboards', ['slug'])
    op.alter_column('datasources', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('datasources', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_foreign_key(None, 'datasources', 'ab_user', ['created_by_fk'], ['id'])
    op.alter_column('dbs', 'allow_csv_upload',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('dbs', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('dbs', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'dbs', ['verbose_name'])
    op.create_unique_constraint(None, 'dynamic_plugin', ['bundle_url'])
    op.create_foreign_key(None, 'metrics', 'ab_user', ['created_by_fk'], ['id'])
    op.create_foreign_key(None, 'metrics', 'ab_user', ['changed_by_fk'], ['id'])
    op.create_index(op.f('ix_report_schedule_active'), 'report_schedule', ['active'], unique=False)
    op.create_unique_constraint(None, 'report_schedule_user', ['user_id', 'report_schedule_id'])
    op.drop_index('ix_row_level_security_filters_filter_type', table_name='row_level_security_filters')
    op.alter_column('slices', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('slices', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('sql_metrics', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('sql_metrics', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_index(op.f('ix_sql_observations_dttm'), 'sql_observations', ['dttm'], unique=False)
    op.alter_column('tab_state', 'autorun',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index('ix_tab_state_id', table_name='tab_state')
    op.alter_column('table_columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('table_columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.drop_index('ix_table_schema_id', table_name='table_schema')
    op.alter_column('tables', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('tables', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.create_unique_constraint(None, 'tables', ['database_id', 'schema', 'table_name'])
    op.drop_index('ix_tagged_object_object_id', table_name='tagged_object')
    op.alter_column('url', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('url', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('url', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('url', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index('ix_tagged_object_object_id', 'tagged_object', ['object_id'], unique=False)
    op.drop_constraint(None, 'tables', type_='unique')
    op.alter_column('tables', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('tables', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index('ix_table_schema_id', 'table_schema', ['id'], unique=1)
    op.alter_column('table_columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('table_columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index('ix_tab_state_id', 'tab_state', ['id'], unique=1)
    op.alter_column('tab_state', 'autorun',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_index(op.f('ix_sql_observations_dttm'), table_name='sql_observations')
    op.alter_column('sql_metrics', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('sql_metrics', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('slices', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('slices', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.create_index('ix_row_level_security_filters_filter_type', 'row_level_security_filters', ['filter_type'], unique=False)
    op.drop_constraint(None, 'report_schedule_user', type_='unique')
    op.drop_index(op.f('ix_report_schedule_active'), table_name='report_schedule')
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'dynamic_plugin', type_='unique')
    op.drop_constraint(None, 'dbs', type_='unique')
    op.alter_column('dbs', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dbs', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dbs', 'allow_csv_upload',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.drop_constraint(None, 'datasources', type_='foreignkey')
    op.alter_column('datasources', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('datasources', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'dashboards', type_='unique')
    op.alter_column('dashboards', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dashboards', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('dashboard_roles', 'dashboard_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('css_templates', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('css_templates', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('columns', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('columns', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'clusters', type_='unique')
    op.alter_column('clusters', 'created_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('clusters', 'changed_on',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('annotation', 'layer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'alerts', type_='foreignkey')
    op.alter_column('alerts', 'log_retention',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('alerts', 'grace_period',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('sqlite_sequence',
    sa.Column('name', sa.NullType(), nullable=True),
    sa.Column('seq', sa.NullType(), nullable=True)
    )
    # ### end Alembic commands ###
